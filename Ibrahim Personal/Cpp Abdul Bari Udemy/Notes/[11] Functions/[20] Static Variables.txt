Static variables are Global variables but with the scope limited only to the function in which they are declared.

- Similar to the global variables these static variables are also assigned in the code section during the program 
loading.

Ex 1:

int v=0;

void fun()
{
int a=5;
v++;
cout<<a<<" "<<v;
}

main()
{
fun(); -- 5, 1
fun(); -- 5, 2
fun(); -- 5, 3
}

// here variable v can be accessed by both main and fun
// a here is a local variable created and destroyed each time the function is called.
// v is local variable allocated in the code section and remining there throughout the program
and accessible by both the functions.

Ex 2:



void fun()
{
static int v=0;
int a=5;
v++;
cout<<a<<" "<<v;
}

main()
{
fun(); -- 5, 1
fun(); -- 5, 2
fun(); -- 5, 3
}

// In Example 2 v will always remain in the memory during the execution of the program like global variable
**** BUT IT CAN BE ACCESSED ONLY BY FUNCTION fun. This is called as static variable.

// The result of the second program will also be the same but now v cannot be accessed by main
*** v is not created each time fun() is called but is created only first time.

** STATIC Variables are available in C/C++ but not in java