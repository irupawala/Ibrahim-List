$date
	Fri Apr 07 12:27:49 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_fulladder4 $end
$var wire 4 ! tb_Sum [3:0] $end
$var wire 1 " tb_Cout $end
$var reg 4 # tb_Ain [3:0] $end
$var reg 4 $ tb_Bin [3:0] $end
$var reg 1 % tb_Cin $end
$scope module dut $end
$var wire 4 & Ain [3:0] $end
$var wire 4 ' Bin [3:0] $end
$var wire 1 % Cin $end
$var wire 1 ( c3 $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 4 + Sum [3:0] $end
$var wire 1 " Cout $end
$scope module FA1 $end
$var wire 1 , Ain $end
$var wire 1 - Bin $end
$var wire 1 % Cin $end
$var wire 1 * Cout $end
$var wire 1 . Sum $end
$var wire 1 / c1 $end
$var wire 1 0 c2 $end
$var wire 1 1 s1 $end
$upscope $end
$scope module FA2 $end
$var wire 1 2 Ain $end
$var wire 1 3 Bin $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 4 Sum $end
$var wire 1 5 c1 $end
$var wire 1 6 c2 $end
$var wire 1 7 s1 $end
$upscope $end
$scope module FA3 $end
$var wire 1 8 Ain $end
$var wire 1 9 Bin $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 : Sum $end
$var wire 1 ; c1 $end
$var wire 1 < c2 $end
$var wire 1 = s1 $end
$upscope $end
$scope module FA4 $end
$var wire 1 > Ain $end
$var wire 1 ? Bin $end
$var wire 1 ( Cin $end
$var wire 1 " Cout $end
$var wire 1 @ Sum $end
$var wire 1 A c1 $end
$var wire 1 B c2 $end
$var wire 1 C s1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
14
03
02
01
10
0/
1.
1-
1,
b11 +
1*
0)
0(
b1 '
b1 &
1%
b1 $
b1 #
0"
b11 !
$end
#1
1@
1(
1;
1)
0:
0.
1/
1*
b1000 !
b1000 +
04
15
1=
11
00
17
19
0,
12
b101 $
b101 '
b10 #
b10 &
#2
14
05
b1011 !
b1011 +
1.
0/
07
16
01
10
13
1,
b111 $
b111 '
b11 #
b11 &
#3
1(
0:
1;
1"
04
15
1)
0@
1A
17
06
1C
b0 !
b0 +
0.
03
09
18
1>
0%
b1 $
b1 '
b1111 #
b1111 &
#4
14
05
1:
0;
b1110 !
b1110 +
1@
0A
07
16
0=
1<
0C
1B
13
19
1?
b1111 $
b1111 '
#5
