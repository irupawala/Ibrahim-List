- Function is a module which performs a specific task
- Functions are used for procedural programming and modular programming.
- Collection of functions is called as library.
- Monolithic programming is when all the codes are written in single program without the use of functions.
- Problems with Monolithic proramming :
	1. programmer has to memorize the entire program can't focus on just one functions
	2. If there is an error entire program will crash
	3. Program development cannot be shared between multiple programmers
	4. Program cannot be accomodated by the machine of smaller memory.
- Programs written using function is called as modular programming. 

- Syntax:
	return_type function_name(parameter list)
	
- function can take zero or more inputs.
- function may or may not return value but can return "ATMOST" one value.
- Void function donâ€™t return any value.
- Default return type is int.

** AVOID using Cin and Cout in function. Not considered as good programming practice.

e.g:

int add (int x, int y)
{
int z;
z = x+y;
return z;
}

void main()
{
int a = 10, b=15, c;
c = add(a,b);
cout << c << endl;
return0;
}

- The variables for both the main function and add function will be created inside the stack. This is called as
activation record.

- Now when the function is called and after the completion of the function the memory of the function inside the 
stack is removed automatically. hence its activation record is deleted.

- Note that this is not the case with heap. If the function has allocated some memory in heap then that will
not get deallocated automatically. FUNCTION SHOULD RELEASE IT BY SAYING DELETE.

- Now once the function ends then its activation record that is all the variables from the memory will also 
be cleared.

- Also notice the the machine code for the main function and other functions will also be different as
in the original function.

