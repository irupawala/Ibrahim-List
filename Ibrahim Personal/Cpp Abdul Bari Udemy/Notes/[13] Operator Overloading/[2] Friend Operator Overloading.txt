- In friend operator overloading neither c1 will add nor c2 will as shown in 
the previous example of operator overloading


- Instead over here 3rd friend function will add the numbers. Hence this function will take the parameters
from both the complex numbers c1 and c2

- // Notice that this operation is like I am having some money and friend is having some money and a third
frind of us is adding the money taking money from each of us individually.

EX:

class complex
{

private:

int real;
int img;

public:

friend complex operator+(complex c1, complex c2)

};

complex operator+ (complex c1, complex c2)
{

complex t;
t.real = c1.real + c2.real;
t.img = c1.img + c2.img;
return t;
}




*** NOTICE THAT FRIEND FUNCTION IS WRITTEN OUTSIDE THE CLASS HENCE WITHOUT USING SCOPE RESOLUTION OPERATOR

// This is because it is completely a independent function which is not a member of the class but a 
" FRIEND OF THE CLASS". Also note that the way we have overloaded the operator in the previous 
examples is called as overloading using "MEMBER FUNCTION".

- Hence there are two ways of overloading a function.

1. Member function - function defined inside a class
2. Friend function - function defined outside a class


