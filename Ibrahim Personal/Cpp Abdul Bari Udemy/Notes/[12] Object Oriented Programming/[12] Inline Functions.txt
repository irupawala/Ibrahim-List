We already know that the inline functions are copied inside the main functions where they are called.

Hence now there are two methods of writing inline functions.

1. write the function within the class itself.
2. write the suffix "inline" before the function name inside the class and then define the class outside 
exactly similar to non-inline functions.

class test
{

public:

void fun1()
{
cout << "Inline";

}

inline void fun2();

};

void test::fun2()
{
cout << "non Inline";
}

int main()
{
test t;
t.fun1();
t.fun2();
}