Global Variables:

- These are the variables declared outside all the function and can be accessed by all the functions.

Local Variables:

- These are the functions declared inside the function and gets deallocated once the function gets executed.

int g=0;

void fun()
{
int a=5;
g=g+a;
cout << g;
}

void main()
{ 
int x=10;
g=15;
fun();
g++;
cout<<g;
}

- Local variables remains in the memory as long as the function is running. 
- Global variables remains in the memory as long as the program is running.

- NOTE THAT GLOBAL VARIABLES ARE ALLOCATED IN THE CODE SECTION AND NOT IN STACK
- GLOBAL VARIABLES WILL GET THE MEMORY AT THE LOADING TIME OF THE PROGRAM ITSELF.

** Program always looks for the declaration of the variable in the nearest scope. 
** If we have local and global variable of the same name then the local variable will be accessed first.
** Variables in C++ have block level scope

**** TO ACCESS THE GLOBAL g WE SHOULD USE SCOPE RESOLUTION :: e.g. cout<<::g<<endl;
