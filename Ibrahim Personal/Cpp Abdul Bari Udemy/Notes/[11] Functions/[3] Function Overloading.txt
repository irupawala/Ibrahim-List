- You can write the same function with different arguments list. This is called as function overloading
- This feature is not available in c but c++ compiler is able to differentiate the functions with different arguments list
- The advantage is we can have the same name for same functionality.

Ex:

int add(int x, int y)// 2 arguments
{
return x+y;
}

int add(int x, int y, int z)// 3 arguments
{
return x+y+z;
}

float add (float x, float y)
{
return x+y;
}


void main()
{
int a=10, b=5, c, d;
c = add(a,b);
d = add(a,b,c);


int i=2.5f, j=3.5f, k; // here it is COMPULSARY to write f or else the data will be considered as default "DOUBLE" and function overloading will fail.
k=add(i,j); // here 1st and 3rd functions are also diff as they have different argument datatype though the same number of the arguments.
}

** FUNCTION CANNOT BE DIFFERENTIATED BASED ON RETURN TYPE

- int max (int, int)
- float max (int, int) 

These two functions are not different and hence will give "NAME CONFLICT".
- Two functions are different only based on the type of the input argument or the number of arguments
BUT NOT THE RETURN TYPE.




